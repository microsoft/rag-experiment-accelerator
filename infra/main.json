{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.25.53.49325",
      "templateHash": "4997696920706548532"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      }
    },
    "resourceToken": {
      "type": "string",
      "defaultValue": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "azureAISearchLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Location for all resources. https://aka.ms/semanticsearchavailability for list of available regions."
      }
    },
    "azureAISearchName": {
      "type": "string",
      "defaultValue": "[format('{0}-search-{1}', parameters('environmentName'), parameters('resourceToken'))]",
      "metadata": {
        "description": "Azure AI Search Resource"
      }
    },
    "azureSearchSku": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "free",
        "basic",
        "standard",
        "standard2",
        "standard3"
      ],
      "metadata": {
        "description": "The SKU of the search service you want to create. E.g. free or standard"
      }
    },
    "azureOpenAIResourceName": {
      "type": "string",
      "defaultValue": "[format('{0}-openai-{1}', parameters('environmentName'), parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of Azure OpenAI Resource"
      }
    },
    "azureOpenAISkuName": {
      "type": "string",
      "defaultValue": "S0",
      "metadata": {
        "description": "Name of Azure OpenAI Resource SKU"
      }
    },
    "azureOpenAIModel": {
      "type": "string",
      "defaultValue": "gpt-35-turbo",
      "metadata": {
        "description": "Azure OpenAI GPT Model Deployment Name"
      }
    },
    "azureOpenAIModelName": {
      "type": "string",
      "defaultValue": "gpt-35-turbo",
      "metadata": {
        "description": "Azure OpenAI GPT Model Name"
      }
    },
    "azureOpenAIModelVersion": {
      "type": "string",
      "defaultValue": "0613",
      "metadata": {
        "description": "Azure OpenAI GPT Model Version"
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "[format('{0}-appinsights-{1}', parameters('environmentName'), parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of Azure Application Insights Resource"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('str{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of Storage Account"
      }
    },
    "machineLearningName": {
      "type": "string",
      "defaultValue": "[format('{0}-aml-{1}', parameters('environmentName'), parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of Azure Machine Learning Workspace"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    }
  },
  "variables": {
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    },
    "rgName": "[format('rg-{0}', parameters('environmentName'))]",
    "keyVaultName": "[format('kv-{0}', parameters('resourceToken'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('rgName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('keyVaultName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "14884193696362060011"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "principalId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Service principal that should be granted read access to the KeyVault. If unset, no service principal is granted access by default"
              }
            }
          },
          "variables": {
            "defaultAccessPolicies": "[if(not(empty(parameters('principalId'))), createArray(createObject('objectId', parameters('principalId'), 'permissions', createObject('secrets', createArray('get', 'set', 'list')), 'tenantId', subscription().tenantId)), createArray())]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enabledForTemplateDeployment": true,
                "accessPolicies": "[union(variables('defaultAccessPolicies'), createArray())]"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
            },
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2022-07-01').vaultUri]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('azureAISearchName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('azureAISearchName')]"
          },
          "location": {
            "value": "[parameters('azureAISearchLocation')]"
          },
          "sku": {
            "value": {
              "name": "[parameters('azureSearchSku')]"
            }
          },
          "semanticSearch": {
            "value": "free"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "5434998258420532507"
            },
            "description": "Creates an Azure AI Search instance."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "standard"
              }
            },
            "authOptions": {
              "type": "object",
              "defaultValue": {}
            },
            "disableLocalAuth": {
              "type": "bool",
              "defaultValue": false
            },
            "encryptionWithCmk": {
              "type": "object",
              "defaultValue": {
                "enforcement": "Unspecified"
              }
            },
            "hostingMode": {
              "type": "string",
              "defaultValue": "default",
              "allowedValues": [
                "default",
                "highDensity"
              ]
            },
            "networkRuleSet": {
              "type": "object",
              "defaultValue": {
                "bypass": "None",
                "ipRules": []
              }
            },
            "partitionCount": {
              "type": "int",
              "defaultValue": 1
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "enabled",
              "allowedValues": [
                "enabled",
                "disabled"
              ]
            },
            "replicaCount": {
              "type": "int",
              "defaultValue": 1
            },
            "semanticSearch": {
              "type": "string",
              "defaultValue": "disabled",
              "allowedValues": [
                "disabled",
                "free",
                "standard"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2023-11-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "authOptions": "[parameters('authOptions')]",
                "disableLocalAuth": "[parameters('disableLocalAuth')]",
                "encryptionWithCmk": "[parameters('encryptionWithCmk')]",
                "hostingMode": "[parameters('hostingMode')]",
                "networkRuleSet": "[parameters('networkRuleSet')]",
                "partitionCount": "[parameters('partitionCount')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "replicaCount": "[parameters('replicaCount')]",
                "semanticSearch": "[parameters('semanticSearch')]"
              },
              "sku": "[parameters('sku')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
            },
            "endpoint": {
              "type": "string",
              "value": "[format('https://{0}.search.windows.net/', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('azureOpenAIResourceName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('azureOpenAIResourceName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "sku": {
            "value": {
              "name": "[parameters('azureOpenAISkuName')]"
            }
          },
          "deployments": {
            "value": [
              {
                "name": "[parameters('azureOpenAIModel')]",
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('azureOpenAIModelName')]",
                  "version": "[parameters('azureOpenAIModelVersion')]"
                },
                "sku": {
                  "name": "Standard",
                  "capacity": 30
                }
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "4323404314272769013"
            },
            "description": "Creates an Azure Cognitive Services instance."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]",
              "metadata": {
                "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI"
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            },
            "allowedIpRules": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": "[parameters('networkAcls')]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 30))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('storageAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": {
              "name": "Standard_GRS"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "262159418746831316"
            },
            "description": "Creates an Azure storage account."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "accessTier": {
              "type": "string",
              "defaultValue": "Hot",
              "allowedValues": [
                "Cool",
                "Hot",
                "Premium"
              ]
            },
            "allowBlobPublicAccess": {
              "type": "bool",
              "defaultValue": true
            },
            "allowCrossTenantReplication": {
              "type": "bool",
              "defaultValue": true
            },
            "allowSharedKeyAccess": {
              "type": "bool",
              "defaultValue": true
            },
            "containers": {
              "type": "array",
              "defaultValue": []
            },
            "defaultToOAuthAuthentication": {
              "type": "bool",
              "defaultValue": false
            },
            "deleteRetentionPolicy": {
              "type": "object",
              "defaultValue": {}
            },
            "dnsEndpointType": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "AzureDnsZone",
                "Standard"
              ]
            },
            "kind": {
              "type": "string",
              "defaultValue": "StorageV2"
            },
            "minimumTlsVersion": {
              "type": "string",
              "defaultValue": "TLS1_2"
            },
            "queues": {
              "type": "array",
              "defaultValue": []
            },
            "supportsHttpsTrafficOnly": {
              "type": "bool",
              "defaultValue": true
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": {
                "bypass": "AzureServices",
                "defaultAction": "Allow"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Standard_LRS"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "container",
                "count": "[length(parameters('containers'))]"
              },
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
              "properties": {
                "publicAccess": "[if(contains(parameters('containers')[copyIndex()], 'publicAccess'), parameters('containers')[copyIndex()].publicAccess, 'None')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
              ]
            },
            {
              "copy": {
                "name": "queue",
                "count": "[length(parameters('queues'))]"
              },
              "condition": "[not(empty(parameters('queues')))]",
              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('queues')[copyIndex()].name)]",
              "properties": {
                "metadata": {}
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('name'), 'default')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('queues')))]",
              "type": "Microsoft.Storage/storageAccounts/queueServices",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "accessTier": "[parameters('accessTier')]",
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "allowCrossTenantReplication": "[parameters('allowCrossTenantReplication')]",
                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                "dnsEndpointType": "[parameters('dnsEndpointType')]",
                "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                "networkAcls": "[parameters('networkAcls')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            },
            "primaryEndpoints": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01').primaryEndpoints]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitoring",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsName": {
            "value": "[format('{0}-logAnalytics-{1}', parameters('environmentName'), parameters('resourceToken'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "10518908304769171542"
            }
          },
          "parameters": {
            "logAnalyticsName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-12-01-preview",
              "name": "[parameters('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "retentionInDays": 30,
                "features": {
                  "searchVersion": 1
                },
                "sku": {
                  "name": "PerGB2018"
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              ]
            }
          ],
          "outputs": {
            "applicationInsightsId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[parameters('applicationInsightsName')]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[parameters('logAnalyticsName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('machineLearningName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('machineLearningName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccount": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.id.value]"
          },
          "keyVault": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.id.value]"
          },
          "applicationInsights": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "5366982923684200000"
            },
            "description": "Creates an Azure Machine Learning Workspace."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "storageAccount": {
              "type": "string"
            },
            "keyVault": {
              "type": "string"
            },
            "applicationInsights": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2023-06-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "systemAssigned"
              },
              "tags": "[parameters('tags')]",
              "properties": {
                "storageAccount": "[parameters('storageAccount')]",
                "keyVault": "[parameters('keyVault')]",
                "applicationInsights": "[parameters('applicationInsights')]"
              }
            }
          ],
          "outputs": {
            "workspaceName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "workspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storekeys",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value]"
          },
          "azureOpenAIName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.name.value]"
          },
          "azureAISearchName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.name.value]"
          },
          "rgName": {
            "value": "[variables('rgName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "462918528232412581"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureOpenAIName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureAISearchName": {
              "type": "string",
              "defaultValue": ""
            },
            "rgName": {
              "type": "string",
              "defaultValue": ""
            },
            "openAIKeyName": {
              "type": "string",
              "defaultValue": "AZURE-OPENAI-KEY"
            },
            "searchKeyName": {
              "type": "string",
              "defaultValue": "AZURE-SEARCH-KEY"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('openAIKeyName'))]",
              "properties": {
                "contentType": "string",
                "value": "[listKeys(resourceId(subscription().subscriptionId, parameters('rgName'), 'Microsoft.CognitiveServices/accounts', parameters('azureOpenAIName')), '2023-05-01').key1]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('searchKeyName'))]",
              "properties": {
                "contentType": "string",
                "value": "[listAdminKeys(resourceId(subscription().subscriptionId, parameters('rgName'), 'Microsoft.Search/searchServices', parameters('azureAISearchName')), '2023-11-01').primaryKey]"
              }
            }
          ],
          "outputs": {
            "SEARCH_KEY_NAME": {
              "type": "string",
              "value": "[parameters('searchKeyName')]"
            },
            "OPENAI_KEY_NAME": {
              "type": "string",
              "value": "[parameters('openAIKeyName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName'))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_KEY_VAULT_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.endpoint.value]"
    },
    "AZURE_SEARCH_SERVICE_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.endpoint.value]"
    },
    "OPENAI_API_TYPE": {
      "type": "string",
      "value": "azure"
    },
    "OPENAI_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.endpoint.value]"
    },
    "OPENAI_API_VERSION": {
      "type": "string",
      "value": "2023-03-15-preview"
    },
    "AML_SUBSCRIPTION_ID": {
      "type": "string",
      "value": "[subscription().subscriptionId]"
    },
    "AML_WORKSPACE_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('machineLearningName')), '2022-09-01').outputs.workspaceName.value]"
    },
    "AML_RESOURCE_GROUP_NAME": {
      "type": "string",
      "value": "[variables('rgName')]"
    }
  }
}